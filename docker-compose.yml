version: '3'
services:

#***************************************************************
# Lab Services
#***************************************************************

  # Nginx Service
  lab-webserver:
    image: nginx:alpine
    build:
      context: nginx
      dockerfile: Dockerfile-nginx    
    hostname: lab-webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./lab-ui/build:/var/www/ui:consistent
      - ./nginx/lab-ssl:/etc/nginx/ssl:consistent
      - ./lab-api:/var/www/api:consistent
      - ./nginx/lab-conf.d/:/etc/nginx/conf.d/
      - ./nginx/docker-entrypoint.d/create-self-signed.sh:/docker-entrypoint.d/10-create-self-signed.sh
    depends_on:
      - "lab-api"
      - "lab-ui"
    networks:
      - app-network

 # DB Service
  lab-db:
    image: postgres:9.5
    hostname: lab-db
    restart: always
#    ports: # Uncomment to access postgres outside of containers
#      - "5432:5432"
    environment:
      POSTGRES_USER: development
      POSTGRES_PASSWORD: development
    networks:
      - app-network

  lab-api:
    image: node:10-stretch 
    hostname: lab-api
    restart: unless-stopped
    user: root # we want to run with write permissions for dev, so run as root.
    working_dir: /home/node/app
    environment: 
      - NODE_ENV=development
      - CONTROLLERPORT=3100
      - AGENTADDRESS=http://agent-lab:8150
      - WEB_ROOT=https://localhost
      - JWT_SECRET=Zu0gPaBdGSP8qwuoK6C1vlBLaXOh6gGq
      - SESSION_SECRET=Xn2r5u8xjAgD7G3KaPdSgVkYp3s6v9y5
      - GOVERNANCE_DISABLE_SSL_CHECK=false
      - SCHEMA_LAB_ORDER=RuuJwd3JMffNwZ43DcJKN1:2:Lab_Order:1.4
      - SCHEMA_LAB_RESULT=RuuJwd3JMffNwZ43DcJKN1:2:Lab_Result:1.4
      - SCHEMA_VACCINATION=RuuJwd3JMffNwZ43DcJKN1:2:Vaccination:1.4
      - SCHEMA_MEDICAL_RELEASE=RuuJwd3JMffNwZ43DcJKN1:2:Medical_Release:1.1
      - SCHEMA_VACCINE_EXEMPTION=RuuJwd3JMffNwZ43DcJKN1:2:Vaccine_Exemption:1.4
    volumes:
      - ./lab-api:/home/node/app:consistent
      - ./wait-for-it:/home/node/wait-for-it
    expose:
      - "3100"
    command: >
      sh -c "npm install && /home/node/wait-for-it/wait-for-it.sh lab-db:5432 && npm run migrate_up_all && npm run dev"
    networks:
      - app-network
    depends_on:
      - "lab-db"

  lab-ui:
    image: node:10-stretch
    hostname: lab-ui
    restart: unless-stopped
    user: root # To write to ui folder, we need write permissions. node user does not have this.
    tty: true # keep react from stopping development server
    working_dir: /home/node/app
    environment: 
      - NODE_ENV=development
      - BROWSER=none  # don't open the web browser
    volumes:
      - ./lab-ui:/home/node/app:rw
    expose:
      - "3000"
    command: >
      sh -c "npm install && npm start"
    networks:
      - app-network
    depends_on:
      - "lab-db"

  tunnel-lab:
    image: dbluhm/agent-tunnel
    command: -s agent-lab:3005 -p 4040 --host ${AGENT_TUNNEL_HOST}
    networks:
      - app-network

  agent-lab:
    build:
      context: .
    environment:
      TUNNEL_ENDPOINT: http://tunnel-lab:4040
      ACAPY_WEBHOOK_URL: http://lab-api:3100/api/controller-webhook
      # ACAPY_ENDPOINT: ${LAB_ENDPOINT}
    volumes:
      - ./acapy-endpoint.sh:/acapy-endpoint.sh
    entrypoint: >
      sh -c '/acapy-endpoint.sh aca-py "$$@"' --
    command: >
        start -it http 0.0.0.0 3005
        -ot http
        --admin 0.0.0.0 8150 --admin-insecure-mode
        --label Lab
        --genesis-url https://raw.githubusercontent.com/Indicio-tech/indicio-network/master/genesis_files/pool_transactions_testnet_genesis
        --plugin acapy_plugin_data_transfer
        --enable-undelivered-queue
        --wallet-type indy
        --wallet-name default
        --wallet-key default
        --auto-provision
        --auto-accept-requests
        --auto-ping-connection
        --auto-respond-credential-proposal
        --auto-respond-credential-offer
        --auto-respond-credential-request
        --auto-store-credential
        --auto-respond-presentation-proposal
        --auto-respond-presentation-request
        --auto-verify-presentation
        --debug-connections
        --debug-credentials
        --debug-presentations
        --invite --invite-label "LAB (admin)"
    ports:
     - "3005:3005"
     - "8150:8150"
    networks:
      - app-network


#***************************************************************
# Government Services
#***************************************************************

  # Nginx Service
  government-webserver:
    image: nginx:alpine
    build:
      context: nginx
      dockerfile: Dockerfile-nginx    
    hostname: government-webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8000:80"
      - "4443:443"
    volumes:
      - ./government-ui/build:/var/www/ui:consistent
      - ./nginx/government-ssl:/etc/nginx/ssl:consistent
      - ./government-api:/var/www/api:consistent
      - ./nginx/government-conf.d/:/etc/nginx/conf.d/
      - ./nginx/docker-entrypoint.d/create-self-signed.sh:/docker-entrypoint.d/10-create-self-signed.sh
    depends_on:
      - "government-api"
      - "government-ui"
    networks:
      - app-network

 # DB Service
  government-db:
    image: postgres:9.5
    hostname: government-db
    restart: always
#    ports: # Uncomment to access postgres outside of containers
#      - "5432:5432"
    environment:
      POSTGRES_USER: government
      POSTGRES_PASSWORD: government
    networks:
      - app-network

  government-api:
    image: node:10-stretch 
    hostname: government-api
    restart: unless-stopped
    user: root # we want to run with write permissions for dev, so run as root.
    working_dir: /home/node/app
    environment: 
      - NODE_ENV=development
      - CONTROLLERPORT=3100
      - AGENTADDRESS=http://agent-government:8151
      - WEB_ROOT=https://localhost:8000
      - JWT_SECRET=Zu0gPaBdGkP8qwuoK6C1vlBLaXOh6gGq
      - SESSION_SECRET=Xn2r558xjAgD7G3KaPdSgVkYp3s6v9y5
      - GOVERNANCE_DISABLE_SSL_CHECK=false
      - SCHEMA_LAB_ORDER=RuuJwd3JMffNwZ43DcJKN1:2:Lab_Order:1.4
      - SCHEMA_LAB_RESULT=RuuJwd3JMffNwZ43DcJKN1:2:Lab_Result:1.4
      - SCHEMA_VACCINATION=RuuJwd3JMffNwZ43DcJKN1:2:Vaccination:1.4
      - SCHEMA_VACCINE_EXEMPTION=RuuJwd3JMffNwZ43DcJKN1:2:Vaccine_Exemption:1.4
      - SCHEMA_MEDICAL_RELEASE=RuuJwd3JMffNwZ43DcJKN1:2:Medical_Release:1.1
      - SCHEMA_TRUSTED_TRAVELER=RuuJwd3JMffNwZ43DcJKN1:2:Trusted_Traveler:1.4 
    volumes:
      - ./government-api:/home/node/app:consistent
      - ./wait-for-it:/home/node/wait-for-it
    expose:
      - "3100"
    command: >
      sh -c "npm install && /home/node/wait-for-it/wait-for-it.sh government-db:5432 && npm run migrate_up_all && npm run dev"
    networks:
      - app-network
    depends_on:
      - "government-db"

  government-ui:
    image: node:10-stretch
    hostname: government-ui
    restart: unless-stopped
    user: root # To write to ui folder, we need write permissions. node user does not have this.
    tty: true # keep react from stopping development server
    working_dir: /home/node/app
    environment: 
      - NODE_ENV=development
      - BROWSER=none  # don't open the web browser
    volumes:
      - ./government-ui:/home/node/app:rw
    expose:
      - "3000"
    command: >
      sh -c "npm install && npm start"
    networks:
      - app-network
    depends_on:
      - "government-db"

  tunnel-government:
    image: dbluhm/agent-tunnel
    command: -s agent-government:3006 -p 4040 --host ${AGENT_TUNNEL_HOST}
    networks:
      - app-network 

  agent-government:
    build:
      context: .
    environment:
      TUNNEL_ENDPOINT: http://tunnel-government:4040
      ACAPY_WEBHOOK_URL: http://government-api:3100/api/controller-webhook
      # ACAPY_ENDPOINT: ${GOVERNMENT_ENDPOINT}
    volumes:
      - ./acapy-endpoint.sh:/acapy-endpoint.sh
    entrypoint: >
      sh -c '/acapy-endpoint.sh aca-py "$$@"' --
    command: >
        start -it http 0.0.0.0 3006
        -ot http
        --admin 0.0.0.0 8151 --admin-insecure-mode
        --label Government
        --genesis-url https://raw.githubusercontent.com/Indicio-tech/indicio-network/master/genesis_files/pool_transactions_testnet_genesis
        --plugin acapy_plugin_data_transfer
        --enable-undelivered-queue
        --wallet-type indy
        --wallet-name default
        --wallet-key default
        --auto-provision
        --auto-accept-requests
        --auto-ping-connection
        --auto-respond-credential-proposal
        --auto-respond-credential-offer
        --auto-respond-credential-request
        --auto-store-credential
        --auto-respond-presentation-proposal
        --auto-respond-presentation-request
        --auto-verify-presentation
        --debug-connections
        --debug-credentials
        --debug-presentations
        --invite --invite-label "GOVERNMENT (admin)"
    ports:
     - "3006:3006"
     - "8151:8151"
    networks:
      - app-network


#***************************************************************
# Verifier Services
#***************************************************************

  # Nginx Service
  verifier-webserver:
    image: nginx:alpine
    build:
      context: nginx
      dockerfile: Dockerfile-nginx    
    hostname: verifier-webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
      - "4444:443"
    volumes:
      - ./verifier-ui/build:/var/www/ui:consistent
      - ./nginx/verifier-ssl:/etc/nginx/ssl:consistent
      - ./verifier-api:/var/www/api:consistent
      - ./nginx/verifier-conf.d/:/etc/nginx/conf.d/
      - ./nginx/docker-entrypoint.d/create-self-signed.sh:/docker-entrypoint.d/10-create-self-signed.sh
    depends_on:
      - "verifier-api"
      - "verifier-ui"
    networks:
      - app-network

 # DB Service
  verifier-db:
    image: postgres:9.5
    hostname: verifier-db
    restart: always
#    ports: # Uncomment to access postgres outside of containers
#      - "5432:5432"
    environment:
      POSTGRES_USER: verifier
      POSTGRES_PASSWORD: verifier
    networks:
      - app-network

  verifier-api:
    image: node:10-stretch 
    hostname: verifier-api
    restart: unless-stopped
    user: root # we want to run with write permissions for dev, so run as root.
    working_dir: /home/node/app
    environment: 
      - NODE_ENV=development
      - CONTROLLERPORT=3100
      - AGENTADDRESS=http://agent-verifier:8152
      - WEB_ROOT=https://localhost:8000
      - JWT_SECRET=Zu0gPaBdGkP8qwuoK6C1vlBLaXOh6gGq
      - SESSION_SECRET=Xn2r558xjAgD7G3KaPdSgVkYp3s6v9y5
      - GOVERNANCE_DISABLE_SSL_CHECK=false
      - SCHEMA_TRUSTED_TRAVELER=RuuJwd3JMffNwZ43DcJKN1:2:Trusted_Traveler:1.4 
    volumes:
      - ./verifier-api:/home/node/app:consistent
      - ./wait-for-it:/home/node/wait-for-it
    expose:
      - "3100"
    command: >
      sh -c "npm install && /home/node/wait-for-it/wait-for-it.sh verifier-db:5432 && npm run migrate_up_all && npm run dev"
    networks:
      - app-network
    depends_on:
      - "verifier-db"

  verifier-ui:
    image: node:10-stretch
    hostname: verifier-ui
    restart: unless-stopped
    user: root # To write to ui folder, we need write permissions. node user does not have this.
    tty: true # keep react from stopping development server
    working_dir: /home/node/app
    environment: 
      - NODE_ENV=development
      - BROWSER=none  # don't open the web browser
    volumes:
      - ./verifier-ui:/home/node/app:rw
    expose:
      - "3000"
    command: >
      sh -c "npm install && npm start"
    networks:
      - app-network
    depends_on:
      - "verifier-db"

  tunnel-verifier:
    image: dbluhm/agent-tunnel
    command: -s agent-verifier:3007 -p 4040 --host ${AGENT_TUNNEL_HOST}
    networks:
      - app-network 

  agent-verifier:
    build:
      context: .
    environment:
      TUNNEL_ENDPOINT: http://tunnel-verifier:4040
      ACAPY_WEBHOOK_URL: http://verifier-api:3100/api/controller-webhook
      # ACAPY_ENDPOINT: ${VERIFIER_ENDPOINT}
    volumes:
      - ./acapy-endpoint.sh:/acapy-endpoint.sh
    entrypoint: >
      sh -c '/acapy-endpoint.sh aca-py "$$@"' --
    command: >
        start -it http 0.0.0.0 3007
        -ot http
        --admin 0.0.0.0 8152 --admin-insecure-mode
        --label Verifier
        --genesis-url https://raw.githubusercontent.com/Indicio-tech/indicio-network/master/genesis_files/pool_transactions_testnet_genesis
        --plugin acapy_plugin_data_transfer
        --enable-undelivered-queue
        --wallet-type indy
        --wallet-name default
        --wallet-key default
        --auto-provision
        --auto-accept-requests
        --auto-ping-connection
        --auto-respond-credential-proposal
        --auto-respond-credential-offer
        --auto-respond-credential-request
        --auto-store-credential
        --auto-respond-presentation-proposal
        --auto-respond-presentation-request
        --auto-verify-presentation
        --debug-connections
        --debug-credentials
        --debug-presentations
        --invite --invite-label "VERIFIER (admin)"
    ports:
     - "3007:3007"
     - "8152:8152"
    networks:
      - app-network


#***************************************************************
# Dev Services
#***************************************************************

  tunnel-test:
    image: dbluhm/agent-tunnel
    command: -s agent-test:3010 -p 4040 --host ${AGENT_TUNNEL_HOST}
    networks:
      - app-network

  agent-test:
    image: dbluhm/acapy-toolbox:939bbe6
    environment:
      TUNNEL_ENDPOINT: http://tunnel-test:4040
    volumes:
      - ./acapy-endpoint.sh:/acapy-endpoint.sh
    ports:
      - 3010:3010
      - 8154:8154
    networks:
      - app-network
    entrypoint: >
      sh -c '/acapy-endpoint.sh aca-py "$$@"' --
    command: >
      start --arg-file default.yml
      -it acapy_plugin_toolbox.http_ws 0.0.0.0 3010
      --admin 0.0.0.0 8154 --admin-insecure-mode
      --label "Test Agent"
      --wallet-type indy
      --wallet-name test
      --wallet-key test
      --auto-provision
      --auto-accept-requests
      --auto-ping-connection
      --auto-respond-credential-proposal
      --auto-respond-credential-offer
      --auto-respond-credential-request
      --auto-store-credential
      --auto-respond-presentation-proposal
      --auto-respond-presentation-request
      --auto-verify-presentation
      --genesis-url https://raw.githubusercontent.com/Indicio-tech/indicio-network/master/genesis_files/pool_transactions_testnet_genesis

#Docker Networks
networks:
  app-network:
    driver: bridge

