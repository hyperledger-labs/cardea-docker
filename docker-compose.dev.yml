version: "3"
services:
  # Nginx Service
  webserver:
    extends:
      file: common-services.yml
      service: webserver
    ports:
      - "80:80"
      - "443:443"
      - "8000:8000"
      - "4443:4443"
      - "8080:8080"
      - "4444:4444"
    depends_on:
      health-issuer-api:
        condition: service_started
      health-issuer-ui:
        condition: service_started
      primary-verifier-api:
        condition: service_started
      primary-verifier-ui:
        condition: service_started
      secondary-verifier-api:
        condition: service_started
      secondary-verifier-ui:
        condition: service_started

  # DB Service
  db:
    extends:
      file: common-services.yml
      service: db

  #***************************************************************
  # Lab Services
  #***************************************************************

  health-issuer-api:
    extends:
      file: common-services.yml
      service: health-issuer-api

  health-issuer-ui:
    extends:
      file: common-services.yml
      service: health-issuer-ui

  health-issuer-agent:
    extends:
      file: common-services.yml
      service: health-issuer-agent

  health-issuer-proxy:
    extends:
      file: common-services.yml
      service: health-issuer-proxy

  health-issuer-proxy-setup:
    extends:
      file: common-services.yml
      service: health-issuer-proxy-setup

  #***************************************************************
  # Government Services
  #***************************************************************

  primary-verifier-api:
    extends:
      file: common-services.yml
      service: primary-verifier-api

  primary-verifier-ui:
    extends:
      file: common-services.yml
      service: primary-verifier-ui

  primary-verifier-agent:
    extends:
      file: common-services.yml
      service: primary-verifier-agent

  primary-verifier-proxy:
    extends:
      file: common-services.yml
      service: primary-verifier-proxy

  primary-verifier-proxy-setup:
    extends:
      file: common-services.yml
      service: primary-verifier-proxy-setup

  #***************************************************************
  # Verifier Services
  #***************************************************************

  secondary-verifier-api:
    extends:
      file: common-services.yml
      service: secondary-verifier-api

  secondary-verifier-ui:
    extends:
      file: common-services.yml
      service: secondary-verifier-ui

  secondary-verifier-agent:
    extends:
      file: common-services.yml
      service: secondary-verifier-agent

  secondary-verifier-proxy:
    extends:
      file: common-services.yml
      service: secondary-verifier-proxy

  secondary-verifier-proxy-setup:
    extends:
      file: common-services.yml
      service: secondary-verifier-proxy-setup

  #***************************************************************
  # Test Services
  #***************************************************************

  test-agent:
    image: ghcr.io/indicio-tech/acapy-toolbox:939bbe6_ssl
    healthcheck:
      test: curl -s -o /dev/null -w '%{http_code}' "http://localhost:8155/status/live" | grep "200" > /dev/null
      start_period: 30s
      interval: 60s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    environment:
      ACAPY_ENDPOINT: http://test-agent:3010
    ports:
      - 3010:3010
      - 8155:8155
    networks:
      - app-network
    entrypoint: >
      sh -c '/home/indy/wait-for-it/wait-for-it.sh -t 300 db:5432 && aca-py "$$@"' --
    volumes:
      - ./wait-for-it:/home/indy/wait-for-it
    command: >
      start --arg-file default.yml
      -it acapy_plugin_toolbox.http_ws 0.0.0.0 3010
      --admin 0.0.0.0 8155 --admin-insecure-mode
      --label "Test Agent"
      --wallet-type indy
      --wallet-name testagent
      --wallet-key test
      --wallet-storage-type postgres_storage
      --wallet-storage-config '{"url":"db:5432"}'
      --wallet-storage-creds '{"account":"testagent","password":"testagent","admin_account":"development","admin_password":"development"}'
      --auto-provision
      --auto-accept-requests
      --auto-ping-connection
      --auto-respond-credential-proposal
      --auto-respond-credential-offer
      --auto-respond-credential-request
      --auto-store-credential
      --auto-respond-presentation-proposal
      --auto-respond-presentation-request
      --auto-verify-presentation
      --genesis-url ${GENESIS_URL} 
      ${TEST_SEED}
    depends_on:
      db:
        condition: service_healthy

  test-proxy:
    image: ghcr.io/indicio-tech/proxy-mediator:0.1.1
    restart: unless-stopped
    environment:
      PORT: 3000
      ENDPOINT: http://test-proxy:3000
      ENABLE_STORE: "true"
      REPO_URI: "postgres://testproxy:testproxy@db:5432/testproxy"
      REPO_KEY: insecure
      LOG_LEVEL: WARNING
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy

  test-proxy-setup:
    image: ghcr.io/indicio-tech/proxy-mediator-setup:0.1.1
    environment:
      - WAIT_BEFORE_HOSTS=3
      - WAIT_HOSTS=test-proxy:3000,test-agent:3010
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=1
      - WAIT_HOST_CONNECT_TIMEOUT=10
      - PROXY=http://test-proxy:3000
      - AGENT=http://test-agent:8155
      - MEDIATOR_INVITE=https://public.mediator.indiciotech.io?c_i=eyJAdHlwZSI6ICJkaWQ6c292OkJ6Q2JzTlloTXJqSGlxWkRUVUFTSGc7c3BlYy9jb25uZWN0aW9ucy8xLjAvaW52aXRhdGlvbiIsICJAaWQiOiAiMDVlYzM5NDItYTEyOS00YWE3LWEzZDQtYTJmNDgwYzNjZThhIiwgInNlcnZpY2VFbmRwb2ludCI6ICJodHRwczovL3B1YmxpYy5tZWRpYXRvci5pbmRpY2lvdGVjaC5pbyIsICJyZWNpcGllbnRLZXlzIjogWyJDc2dIQVpxSktuWlRmc3h0MmRIR3JjN3U2M3ljeFlEZ25RdEZMeFhpeDIzYiJdLCAibGFiZWwiOiAiSW5kaWNpbyBQdWJsaWMgTWVkaWF0b3IifQ==
    depends_on:
      db:
        condition: service_healthy
      test-agent:
        condition: service_started
      test-proxy:
        condition: service_started
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

volumes:
  test-proxy-store:
