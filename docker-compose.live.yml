version: "3"
services:
  # Nginx Service
  webserver:
    extends:
      file: common-services.yml
      service: webserver
    ports:
      - "80:80"
      - "443:443"
    environment:
      DEV_COMMENT: "" # Enable prod settings
      PROD_COMMENT: "#" # Disable dev settings
    #    volumes: # Remove government service from webserver
    #      - type: tmpfs
    #        target: /etc/nginx/templates/
    #      - ./nginx/conf.d/lab.conf.template:/etc/nginx/templates/lab.conf.template
    #      - ./nginx/conf.d/verifier.conf.template:/etc/nginx/templates/verifier.conf.template
    depends_on:
      issuer-issuer-api:
        condition: service_started
      issuer-issuer-ui:
        condition: service_started
      primary-verifier-api:
        condition: service_started
      primary-verifier-ui:
        condition: service_started
      secondary-verifier-api:
        condition: service_started
      secondary-verifier-ui:
        condition: service_started

  # DB Service
  db:
    extends:
      file: common-services.yml
      service: db
    volumes:
      - ./postgres-db:/var/lib/postgresql/data:consistent
    environment:
      POSTGRES_USER: development
      POSTGRES_PASSWORD: development
      PGDATA: /var/lib/postgresql/data/pgdata

  #***************************************************************
  # Lab Services
  #***************************************************************

  health-issuer-api:
    extends:
      file: common-services.yml
      service: health-issuer-api
    command: >
      sh -c "npm install && /home/node/wait-for-it/wait-for-it.sh -t 300 ${HEALTH_ISSUER_API_DB_HOST}:5432 && npm run migrate_up_all && npm start"

  health-issuer-ui:
    extends:
      file: common-services.yml
      service: health-issuer-ui
    restart: "no"
    command: >
      sh -c "npm install && npm run build"

  health-issuer-agent:
    extends:
      file: common-services.yml
      service: health-issuer-agent

  health-issuer-proxy:
    extends:
      file: common-services.yml
      service: health-issuer-proxy

  health-issuer-proxy-setup:
    extends:
      file: common-services.yml
      service: health-issuer-proxy-setup

  #***************************************************************
  # Government Services
  #***************************************************************

  primary-verifier-api:
    extends:
      file: common-services.yml
      service: primary-verifier-api
    command: >
      sh -c "npm install && /home/node/wait-for-it/wait-for-it.sh -t 300 ${PRIMARY_VERIFIER_API_DB_HOST}:5432 && npm run migrate_up_all && npm run start"

  primary-verifier-ui:
    extends:
      file: common-services.yml
      service: primary-verifier-ui
    restart: "no"
    command: >
      sh -c "npm install && npm run build"

  primary-verifier-agent:
    extends:
      file: common-services.yml
      service: primary-verifier-agent

  primary-verifier-proxy:
    extends:
      file: common-services.yml
      service: primary-verifier-proxy

  primary-verifier-proxy-setup:
    extends:
      file: common-services.yml
      service: primary-verifier-proxy-setup

  #***************************************************************
  # Verifier Services
  #***************************************************************

  secondary-verifier-api:
    extends:
      file: common-services.yml
      service: secondary-verifier-api
    command: >
      sh -c "npm install && /home/node/wait-for-it/wait-for-it.sh -t 300 ${SECONDARY_VERIFIER_API_DB_HOST}:5432 && npm run migrate_up_all && npm run start"

  secondary-verifier-ui:
    extends:
      file: common-services.yml
      service: secondary-verifier-ui
    restart: "no"
    command: >
      sh -c "npm install && npm run build"

  secondary-verifier-agent:
    extends:
      file: common-services.yml
      service: secondary-verifier-agent

  secondary-verifier-proxy:
    extends:
      file: common-services.yml
      service: secondary-verifier-proxy

  secondary-verifier-proxy-setup:
    extends:
      file: common-services.yml
      service: secondary-verifier-proxy-setup

#Docker Networks
networks:
  app-network:
    driver: bridge
